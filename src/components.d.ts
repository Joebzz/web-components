/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface LeafletMap {}
  interface MatDialog {
    /**
    * The Dialog Title
    */
    'dialogTitle': string;
    'openDialog': () => Promise<void>;
    /**
    * Whether to show the footer or not
    */
    'showFooter': boolean;
  }
  interface OlLayerWms {
    'getLayer': () => Promise<any>;
    'getSource': () => Promise<any>;
    'layer': string;
    'serverType': string;
    'url': string;
  }
  interface OlMap {
    'latitude': number;
    'longitude': number;
    'zoom': number;
  }
  interface SwFilmDetails {
    /**
    * The id for the film
    */
    'filmId': number;
    /**
    * The URL for the film
    */
    'url': string;
  }
  interface SwFilmList {}
  interface SwPeopleList {}
  interface SwPersonDetails {
    /**
    * The id for the person
    */
    'personId': number;
    /**
    * The URL for the person
    */
    'url': string;
  }
}

declare global {


  interface HTMLLeafletMapElement extends Components.LeafletMap, HTMLStencilElement {}
  var HTMLLeafletMapElement: {
    prototype: HTMLLeafletMapElement;
    new (): HTMLLeafletMapElement;
  };

  interface HTMLMatDialogElement extends Components.MatDialog, HTMLStencilElement {}
  var HTMLMatDialogElement: {
    prototype: HTMLMatDialogElement;
    new (): HTMLMatDialogElement;
  };

  interface HTMLOlLayerWmsElement extends Components.OlLayerWms, HTMLStencilElement {}
  var HTMLOlLayerWmsElement: {
    prototype: HTMLOlLayerWmsElement;
    new (): HTMLOlLayerWmsElement;
  };

  interface HTMLOlMapElement extends Components.OlMap, HTMLStencilElement {}
  var HTMLOlMapElement: {
    prototype: HTMLOlMapElement;
    new (): HTMLOlMapElement;
  };

  interface HTMLSwFilmDetailsElement extends Components.SwFilmDetails, HTMLStencilElement {}
  var HTMLSwFilmDetailsElement: {
    prototype: HTMLSwFilmDetailsElement;
    new (): HTMLSwFilmDetailsElement;
  };

  interface HTMLSwFilmListElement extends Components.SwFilmList, HTMLStencilElement {}
  var HTMLSwFilmListElement: {
    prototype: HTMLSwFilmListElement;
    new (): HTMLSwFilmListElement;
  };

  interface HTMLSwPeopleListElement extends Components.SwPeopleList, HTMLStencilElement {}
  var HTMLSwPeopleListElement: {
    prototype: HTMLSwPeopleListElement;
    new (): HTMLSwPeopleListElement;
  };

  interface HTMLSwPersonDetailsElement extends Components.SwPersonDetails, HTMLStencilElement {}
  var HTMLSwPersonDetailsElement: {
    prototype: HTMLSwPersonDetailsElement;
    new (): HTMLSwPersonDetailsElement;
  };
  interface HTMLElementTagNameMap {
    'leaflet-map': HTMLLeafletMapElement;
    'mat-dialog': HTMLMatDialogElement;
    'ol-layer-wms': HTMLOlLayerWmsElement;
    'ol-map': HTMLOlMapElement;
    'sw-film-details': HTMLSwFilmDetailsElement;
    'sw-film-list': HTMLSwFilmListElement;
    'sw-people-list': HTMLSwPeopleListElement;
    'sw-person-details': HTMLSwPersonDetailsElement;
  }
}

declare namespace LocalJSX {
  interface LeafletMap extends JSXBase.HTMLAttributes<HTMLLeafletMapElement> {}
  interface MatDialog extends JSXBase.HTMLAttributes<HTMLMatDialogElement> {
    /**
    * The Dialog Title
    */
    'dialogTitle'?: string;
    /**
    * Whether to show the footer or not
    */
    'showFooter'?: boolean;
  }
  interface OlLayerWms extends JSXBase.HTMLAttributes<HTMLOlLayerWmsElement> {
    'layer'?: string;
    'serverType'?: string;
    'url'?: string;
  }
  interface OlMap extends JSXBase.HTMLAttributes<HTMLOlMapElement> {
    'latitude'?: number;
    'longitude'?: number;
    'zoom'?: number;
  }
  interface SwFilmDetails extends JSXBase.HTMLAttributes<HTMLSwFilmDetailsElement> {
    /**
    * The id for the film
    */
    'filmId'?: number;
    /**
    * The URL for the film
    */
    'url'?: string;
  }
  interface SwFilmList extends JSXBase.HTMLAttributes<HTMLSwFilmListElement> {}
  interface SwPeopleList extends JSXBase.HTMLAttributes<HTMLSwPeopleListElement> {}
  interface SwPersonDetails extends JSXBase.HTMLAttributes<HTMLSwPersonDetailsElement> {
    'onOpenPersonDetails'?: (event: CustomEvent<any>) => void;
    /**
    * The id for the person
    */
    'personId'?: number;
    /**
    * The URL for the person
    */
    'url'?: string;
  }

  interface IntrinsicElements {
    'leaflet-map': LeafletMap;
    'mat-dialog': MatDialog;
    'ol-layer-wms': OlLayerWms;
    'ol-map': OlMap;
    'sw-film-details': SwFilmDetails;
    'sw-film-list': SwFilmList;
    'sw-people-list': SwPeopleList;
    'sw-person-details': SwPersonDetails;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


